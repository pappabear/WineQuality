"0","dataset.training.original <- dataset.training"
"0","# apply capping to dataset.training$fixed.acidity"
"0","qnt <- quantile(dataset.training$fixed.acidity, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$fixed.acidity, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$fixed.acidity, na.rm = T)"
"0","dataset.training$fixed.acidity[dataset.training$fixed.acidity < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$fixed.acidity[dataset.training$fixed.acidity > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$volatile.acidity"
"0","qnt <- quantile(dataset.training$volatile.acidity, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$volatile.acidity, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$volatile.acidity, na.rm = T)"
"0","dataset.training$volatile.acidity[dataset.training$volatile.acidity < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$volatile.acidity[dataset.training$volatile.acidity > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$citric.acid"
"0","qnt <- quantile(dataset.training$citric.acid, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$citric.acid, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$citric.acid, na.rm = T)"
"0","dataset.training$citric.acid[dataset.training$citric.acid < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$citric.acid[dataset.training$citric.acid > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$chlorides"
"0","qnt <- quantile(dataset.training$chlorides, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$chlorides, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$chlorides, na.rm = T)"
"0","dataset.training$chlorides[dataset.training$chlorides < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$chlorides[dataset.training$chlorides > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$free.sulfur.dioxide"
"0","qnt <- quantile(dataset.training$free.sulfur.dioxide, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$free.sulfur.dioxide, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$free.sulfur.dioxide, na.rm = T)"
"0","dataset.training$free.sulfur.dioxide[dataset.training$free.sulfur.dioxide < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$free.sulfur.dioxide[dataset.training$free.sulfur.dioxide > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$total.sulfur.dioxide"
"0","qnt <- quantile(dataset.training$total.sulfur.dioxide, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$total.sulfur.dioxide, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$total.sulfur.dioxide, na.rm = T)"
"0","dataset.training$total.sulfur.dioxide[dataset.training$total.sulfur.dioxide < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$total.sulfur.dioxide[dataset.training$total.sulfur.dioxide > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$density"
"0","qnt <- quantile(dataset.training$density, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$density, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$density, na.rm = T)"
"0","dataset.training$density[dataset.training$density < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$density[dataset.training$density > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$pH"
"0","qnt <- quantile(dataset.training$pH, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$pH, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$pH, na.rm = T)"
"0","dataset.training$pH[dataset.training$pH < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$pH[dataset.training$pH > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$sulphates"
"0","qnt <- quantile(dataset.training$sulphates, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$sulphates, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$sulphates, na.rm = T)"
"0","dataset.training$sulphates[dataset.training$sulphates < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$sulphates[dataset.training$sulphates > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$alcohol"
"0","qnt <- quantile(dataset.training$alcohol, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$alcohol, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$alcohol, na.rm = T)"
"0","dataset.training$alcohol[dataset.training$alcohol < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$alcohol[dataset.training$alcohol > (qnt[2] + H)] <- caps[2]"
"0","# apply capping to dataset.training$residual.sugar"
"0","qnt <- quantile(dataset.training$residual.sugar, probs=c(.25, .75), na.rm = T)"
"0","caps <- quantile(dataset.training$residual.sugar, probs=c(.05, .95), na.rm = T)"
"0","H <- 1.5 * IQR(dataset.training$residual.sugar, na.rm = T)"
"0","dataset.training$residual.sugar[dataset.training$residual.sugar < (qnt[1] - H)] <- caps[1]"
"0","dataset.training$residual.sugar[dataset.training$residual.sugar > (qnt[2] + H)] <- caps[2]"
